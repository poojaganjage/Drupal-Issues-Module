<?php

use Drupal\Core\Mail\MailManagerInterface;
use Drupal\Component\Utility\SafeMarkup;
use Drupal\Component\Utility\Html;

/**
 * Implementation of hook_theme().
 */
function amazing_forms_theme() {
	return [
		'mail-body' => [
			'variables' => [
				'text' => NULL,
			],
		],
	];
}

/**
 * Implementation of hook_form_alter().
 */
function amazing_forms_form_alter(&$form, $form_state, $form_id) {
	if($form_id == 'amazing_forms_contribute'){
		// $form['my_captcha_element'] = array(
		// 	'#type' => 'captcha',
		// 	'#captcha_type' => 'recaptcha/reCAPTCHA',
		// 	'#weight' => 8,
		// );
		$form['actions']['submit']['#submit'][] = 'amazing_forms_html_mails'; //custom name
	}
} 

/**
 * Implementation of hook_captcha().
 */
// function amazing_forms_captcha($captcha, $captcha_type='', $captcha_sid=NULL) {
// 	$result = image_captcha_captcha($captcha, $captcha_type='', $captcha_sid=NULL);
	
// 	// if($captcha == 'generate') {
// 	// 	$result['form']['captcha_response']['#title'] = t('Captcha Module');
// 	// }
	
// 	return $result;
// }

/**
 * Implements hook_mail().
 */
// function amazing_forms_mail($key, &$message, $params) {
//   $options = array(
//     'langcode' => $message['langcode'],
//   );

//   switch ($key) {
//     case 'create_article':
//       $message['from'] = \Drupal::config('system.site')->get('mail');
//       $message['subject'] = t('Article created: @title', array('@title' => $params['node_title']), $options);
//       $message['body'][] = $params['message'];
//       break;
//   }
// }

// /**
//  * Implements hook_entity_insert().
//  */
// function amazing_forms_entity_insert(Drupal\Core\Entity\EntityInterface $entity) {

//   if ($entity->getEntityTypeId() !== 'node' || ($entity->getEntityTypeId() === 'node' && $entity->bundle() !== 'article')) {
//     return;
//   }

//   $mailManager = \Drupal::service('plugin.manager.mail');

//   $module = 'amazing_forms';
//   $key = 'create_article';
//   $to = \Drupal::currentUser()->getEmail();
//   $params['message'] = $entity->get('body')->value;
//   $params['node_title'] = $entity->label();
//   $langcode = \Drupal::currentUser()->getPreferredLangcode();
//   $send = true;

//   $result = $mailManager->mail($module, $key, $to, $langcode, $params, NULL, $send);
//   if ($result['result'] !== true) {
//     drupal_set_message(t('There was a problem sending your message and it was not sent.'), 'error');
//   }
//   else {
//     drupal_set_message(t('Your message has been sent.'));
//   }

// }

/**
 * Implements hook_html_mails().
 */
function amazing_forms_html_mails($form, \Drupal\Core\Form\FormStateInterface $form_state){
// $send_mail = new \Drupal\Core\Mail\Plugin\Mail\PhpMail(); // this is used to send HTML emails
$mailManager = \Drupal::service('plugin.manager.mail');
$from = \Drupal::config('system.site')->get('mail');
$to = \Drupal::currentUser()->getEmail();
$form['headers'] = array(
'content-type' => 'text/html',
'MIME-Version' => '1.0',
'reply-to' => $from,
'from' => 'sender name <'.$from.'>'
);
$form['to'] = $to;
$form['subject'] = "Subject Goes here !!!!!";
 
$form['message'] = 'Hello,
Thank you for reading this blog.';
$langcode = \Drupal::currentUser()->getPreferredLangcode();
$send = true;
 
$result = $mailManager->mail($to, $form, $langcode, $send);
if ($result['result'] !== true) {
    drupal_set_message(t('There was a problem sending your message and it was not sent.'), 'error');
  } else {
    drupal_set_message(t('Your message has been sent.'));
  }
}